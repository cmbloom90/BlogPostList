{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/UserHeader.js","components/PostList.js","components/App.js","reducers/index.js","reducers/postsReducer.js","reducers/usersReducer.js","index.js"],"names":["axios","create","baseURL","fetchPosts","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","response","wrap","_context2","prev","next","jsonPlaceholder","get","sent","type","payload","data","stop","this","_x3","apply","arguments","fetchUser","id","_ref3","_callee3","_context3","concat","_x4","UserHeader","user","props","react_default","createElement","className","name","React","Component","connect","state","ownProps","users","find","userId","PostList","fetchPostsAndUsers","posts","map","post","key","title","body","components_UserHeader","renderList","_ref","_callee","getState","_context","_","chain","uniq","forEach","value","_x","_x2","App","components_PostList","combineReducers","length","undefined","action","toConsumableArray","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"qRAEeA,WAAMC,OAAO,CAC1BC,QAAS,yCCUEC,EAAa,iCAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAM,SAAAC,EAAMC,GAAN,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACPC,EAAgBC,IAAI,UADb,OACxBN,EADwBE,EAAAK,KAG9BR,EAAS,CAAES,KAAM,cAAeC,QAAST,EAASU,OAHpB,wBAAAR,EAAAS,SAAAb,EAAAc,SAAN,gBAAAC,GAAA,OAAArB,EAAAsB,MAAAF,KAAAG,YAAA,IAMbC,EAAY,SAAAC,GAAE,sBAAAC,EAAAzB,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAAsB,EAAMpB,GAAN,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAhB,KAAA,EACNC,EAAgBC,IAAhB,UAAAe,OAA8BJ,IADxB,OACvBjB,EADuBoB,EAAAb,KAG7BR,EAAS,CAAES,KAAM,aAAcC,QAAST,EAASU,OAHpB,wBAAAU,EAAAT,SAAAQ,EAAAP,SAAJ,gBAAAU,GAAA,OAAAJ,EAAAJ,MAAAF,KAAAG,YAAA,IChBrBQ,mLACK,IACCC,EAASZ,KAAKa,MAAdD,KAER,OAAKA,EAIEE,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,UAAUJ,EAAKK,KAA9B,KAHE,YALYC,IAAMC,WAgBhBC,cAJS,SAACC,EAAOC,GAC9B,MAAO,CAAEV,KAAMS,EAAME,MAAMC,KAAK,SAAAZ,GAAI,OAAIA,EAAKP,KAAOiB,EAASG,WAGhDL,CAAyBT,GCdlCe,8LAEF1B,KAAKa,MAAMc,0DAIX,OAAO3B,KAAKa,MAAMe,MAAMC,IAAI,SAAAC,GAC1B,OACEhB,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,OAAOe,IAAKD,EAAKzB,IAC9BS,EAAA9B,EAAA+B,cAAA,KAAGC,UAAU,mCACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,WACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,eACbF,EAAA9B,EAAA+B,cAAA,UAAKe,EAAKE,OACVlB,EAAA9B,EAAA+B,cAAA,SAAIe,EAAKG,OAEXnB,EAAA9B,EAAA+B,cAACmB,EAAD,CAAYT,OAAQK,EAAKL,8CAQjC,OAAOX,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,kBAAkBhB,KAAKmC,qBAvB1BjB,IAAMC,WA+BdC,cAJS,SAAAC,GACtB,MAAO,CAAEO,MAAOP,EAAMO,QAKtB,CAAED,mBFnC8B,iCAAAS,EAAAvD,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAM,SAAAoD,EAAOlD,EAAUmD,GAAjB,OAAAvD,EAAAC,EAAAK,KAAA,SAAAkD,GAAA,cAAAA,EAAAhD,KAAAgD,EAAA/C,MAAA,cAAA+C,EAAA/C,KAAA,EAChCL,EAASR,KADuB,OAGtC6D,IAAEC,MAAMH,IAAWV,OAChBC,IAAI,UACJa,OACAC,QAAQ,SAAAtC,GAAE,OAAIlB,EAASiB,EAAUC,MACjCuC,QAPmC,wBAAAL,EAAAxC,SAAAsC,EAAArC,SAAN,gBAAA6C,EAAAC,GAAA,OAAAV,EAAAlC,MAAAF,KAAAG,YAAA,KEiCnBiB,CAGbM,GC5BaqB,EARH,WACV,OACEjC,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,gBACbF,EAAA9B,EAAA+B,cAAA,MAAIC,UAAU,aAAd,kBACAF,EAAA9B,EAAA+B,cAACiC,EAAD,gBCHSC,cAAgB,CAC7BrB,MCLa,WAAwB,IAAvBP,EAAuBlB,UAAA+C,OAAA,QAAAC,IAAAhD,UAAA,GAAAA,UAAA,GAAf,GAAIiD,EAAWjD,UAAA+C,OAAA,EAAA/C,UAAA,QAAAgD,EACrC,OAAQC,EAAOxD,MACb,IAAK,cACH,OAAOwD,EAAOvD,QAChB,QACE,OAAOwB,IDCXE,MENa,WAAwB,IAAvBF,EAAuBlB,UAAA+C,OAAA,QAAAC,IAAAhD,UAAA,GAAAA,UAAA,GAAf,GAAIiD,EAAWjD,UAAA+C,OAAA,EAAA/C,UAAA,QAAAgD,EACrC,OAAQC,EAAOxD,MACb,IAAK,aACH,SAAAa,OAAA5B,OAAAwE,EAAA,EAAAxE,CAAWwC,GAAX,CAAkB+B,EAAOvD,UAC3B,QACE,OAAOwB,MCIPiC,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACP9C,EAAA9B,EAAA+B,cAAC8C,EAAA,EAAD,CAAUP,MAAOA,GACfxC,EAAA9B,EAAA+B,cAAC+C,EAAD,OAEFC,SAASC,cAAc","file":"static/js/main.fdee58bd.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://jsonplaceholder.typicode.com\"\n});\n","import _ from \"lodash\";\nimport jsonPlaceholder from \"../apis/jsonPlaceholder\";\n\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n  await dispatch(fetchPosts());\n\n  _.chain(getState().posts)\n    .map(\"userId\")\n    .uniq()\n    .forEach(id => dispatch(fetchUser(id)))\n    .value();\n};\n\nexport const fetchPosts = () => async dispatch => {\n  const response = await jsonPlaceholder.get(\"/posts\");\n\n  dispatch({ type: \"FETCH_POSTS\", payload: response.data });\n};\n\nexport const fetchUser = id => async dispatch => {\n  const response = await jsonPlaceholder.get(`/users/${id}`);\n\n  dispatch({ type: \"FETCH_USER\", payload: response.data });\n};\n\n/* export const fetchUser = id => dispatch => _fetchUser(id, dispatch);\nconst _fetchUser = _.memoize(async (id, dispatch) => {\n  const response = await jsonPlaceholder.get(`/users/${id}`);\n\n  dispatch({ type: \"FETCH_USER\", payload: response.data });\n}); */\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass UserHeader extends React.Component {\n  render() {\n    const { user } = this.props;\n\n    if (!user) {\n      return null;\n    }\n\n    return <div className=\"header\">{user.name} </div>;\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { user: state.users.find(user => user.id === ownProps.userId) };\n};\n\nexport default connect(mapStateToProps)(UserHeader);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchPostsAndUsers } from \"../actions\";\nimport UserHeader from \"./UserHeader\";\n\nclass PostList extends React.Component {\n  componentDidMount() {\n    this.props.fetchPostsAndUsers();\n  }\n\n  renderList() {\n    return this.props.posts.map(post => {\n      return (\n        <div className=\"item\" key={post.id}>\n          <i className=\"large middle aligned icon user\" />\n          <div className=\"content\">\n            <div className=\"description\">\n              <h2>{post.title}</h2>\n              <p>{post.body}</p>\n            </div>\n            <UserHeader userId={post.userId} />\n          </div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return <div className=\"ui celled list\">{this.renderList()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return { posts: state.posts };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchPostsAndUsers }\n)(PostList);\n","import React from \"react\";\nimport PostList from \"./PostList\";\n\nconst App = () => {\n  return (\n    <div className=\"ui container\">\n      <h1 className=\"ui header\">Mock Blog List</h1>\n      <PostList />\n    </div>\n  );\n};\nexport default App;\n","import { combineReducers } from \"redux\";\nimport postsReducer from \"./postsReducer\";\nimport usersReducer from \"./usersReducer\";\n\nexport default combineReducers({\n  posts: postsReducer,\n  users: usersReducer\n});\n","export default (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_POSTS\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_USER\":\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}